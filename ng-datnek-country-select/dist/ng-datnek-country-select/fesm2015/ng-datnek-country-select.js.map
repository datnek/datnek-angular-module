{"version":3,"file":"ng-datnek-country-select.js","sources":["../../../projects/ng-datnek-country-select/src/lib/country.model.ts","../../../projects/ng-datnek-country-select/src/lib/ng-datnek-country-select.service.ts","../../../projects/ng-datnek-country-select/src/lib/ng-datnek-country-select.component.ts","../../../projects/ng-datnek-country-select/src/lib/ng-datnek-country-select.module.ts","../../../projects/ng-datnek-country-select/src/public-api.ts","../../../projects/ng-datnek-country-select/src/ng-datnek-country-select.ts"],"sourcesContent":["export class Country {\n  constructor(public code: string, public name: string, public phoneCode: string) {}\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgDatnekCountrySelectService {\n\n  url: string;\n  constructor(private http: HttpClient) {\n    this.url = './data/country.json';\n  }\n\n\n  // tslint:disable-next-line:typedef\n  getCountry() {\n    return this.http.get<any[]>(this.url);\n  }\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {NgDatnekCountrySelectService} from './ng-datnek-country-select.service';\nimport {Country} from './country.model';\n\n@Component({\n  selector: 'lib-ng-datnek-country-select',\n  templateUrl: './ng-datnek-country-select.component.html',\n  styleUrls: [\n    './ng-datnek-country-select.component.css'\n  ]\n})\nexport class NgDatnekCountrySelectComponent implements OnInit {\n\n\n  @Output() countryEventEmitterChange = new EventEmitter<Country>();\n  @Input() id = 'utils-country';\n  @Input() placeholder: string;\n  countries: Country[];\n  icon: string;\n  currentCountry: Country;\n  @Input() style: any;\n  constructor(private ngDatnekCountrySelectService: NgDatnekCountrySelectService) { }\n\n  // tslint:disable-next-line:typedef\n  async ngOnInit() {\n    this.countries = await this.ngDatnekCountrySelectService.getCountry().toPromise();\n    this.placeholder = this.placeholder ? this.placeholder : 'Select a country';\n  }\n\n  onChange(e): void {\n    const value = e.target.value;\n    this.currentCountry = this.countries.find(c => c.code === value);\n    this.icon = `flag-icon  flag-icon-${value.toLowerCase()}`;\n    this.countryEventEmitterChange.emit(this.currentCountry);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgDatnekCountrySelectComponent } from './ng-datnek-country-select.component';\nimport {CommonModule} from '@angular/common';\nimport {HttpClientModule} from '@angular/common/http';\n\n\n\n@NgModule({\n  declarations: [NgDatnekCountrySelectComponent],\n  imports: [\n    CommonModule,\n    HttpClientModule,\n  ],\n  exports: [NgDatnekCountrySelectComponent]\n})\nexport class NgDatnekCountrySelectModule { }\n","/*\n * Public API Surface of ng-datnek-country-select\n */\n\nexport * from './lib/country.model';\nexport * from './lib/ng-datnek-country-select.service';\nexport * from './lib/ng-datnek-country-select.component';\nexport * from './lib/ng-datnek-country-select.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;;MAAa,OAAO;IAClB,YAAmB,IAAY,EAAS,IAAY,EAAS,SAAiB;QAA3D,SAAI,GAAJ,IAAI,CAAQ;QAAS,SAAI,GAAJ,IAAI,CAAQ;QAAS,cAAS,GAAT,SAAS,CAAQ;KAAI;;;MCKvE,4BAA4B;IAGvC,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAClC,IAAI,CAAC,GAAG,GAAG,qBAAqB,CAAC;KAClC;;IAID,UAAU;QACR,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAQ,IAAI,CAAC,GAAG,CAAC,CAAC;KACvC;;;;YAdF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;YAJO,UAAU;;;MCUL,8BAA8B;IAUzC,YAAoB,4BAA0D;QAA1D,iCAA4B,GAA5B,4BAA4B,CAA8B;QAPpE,8BAAyB,GAAG,IAAI,YAAY,EAAW,CAAC;QACzD,OAAE,GAAG,eAAe,CAAC;KAMqD;;IAG7E,QAAQ;;YACZ,IAAI,CAAC,SAAS,GAAG,MAAM,IAAI,CAAC,4BAA4B,CAAC,UAAU,EAAE,CAAC,SAAS,EAAE,CAAC;YAClF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,GAAG,kBAAkB,CAAC;SAC7E;KAAA;IAED,QAAQ,CAAC,CAAC;QACR,MAAM,KAAK,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC;QAC7B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,KAAK,KAAK,CAAC,CAAC;QACjE,IAAI,CAAC,IAAI,GAAG,wBAAwB,KAAK,CAAC,WAAW,EAAE,EAAE,CAAC;QAC1D,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KAC1D;;;YA9BF,SAAS,SAAC;gBACT,QAAQ,EAAE,8BAA8B;gBACxC,+dAAwD;;aAIzD;;;YATO,4BAA4B;;;wCAajC,MAAM;iBACN,KAAK;0BACL,KAAK;oBAIL,KAAK;;;MCLK,2BAA2B;;;YARvC,QAAQ,SAAC;gBACR,YAAY,EAAE,CAAC,8BAA8B,CAAC;gBAC9C,OAAO,EAAE;oBACP,YAAY;oBACZ,gBAAgB;iBACjB;gBACD,OAAO,EAAE,CAAC,8BAA8B,CAAC;aAC1C;;;ACdD;;;;ACAA;;;;;;"}